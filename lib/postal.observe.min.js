/**
 * postal.observe - A postal.js plugin that provides a way to get a subscription as Rx.Observable
 * Author: Tim Ermilov <yamalight@gmail.com> (http://codezen.net)
 * Version: v0.1.0
 * Url: https://github.com/yamalight/postal.observe
 * License(s): MIT
 */
(function(n,e){"object"==typeof module&&module.exports?module.exports=function(n){return e(require("rx"),n,this)}:"function"==typeof define&&define.amd?define(["rx","postal"],function(t,r){return e(t,r,n)}):n.postal=e(n.Rx,n.postal,n)})(this,function(n,e,t){return e.observe=function(e){var t=this,r=e.channel,o=e.topic;return n.Observable.fromEventPattern(function(n){return t.subscribe({channel:r,topic:o,callback:n})},function(n,e){e.unsubscribe()})},e.ChannelDefinition.prototype.observe=function(e){var t=this,r=e.topic?e.topic:e;return n.Observable.fromEventPattern(function(n){return t.bus.subscribe({channel:t.channel,topic:r,callback:n})},function(n,e){e.unsubscribe()})},e});